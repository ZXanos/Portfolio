[{"/Users/zxanos/Development/personal/portfolio/src/App.js":"1","/Users/zxanos/Development/personal/portfolio/src/reportWebVitals.js":"2","/Users/zxanos/Development/personal/portfolio/src/Controllers/GridController.js":"3","/Users/zxanos/Development/personal/portfolio/src/index.js":"4","/Users/zxanos/Development/personal/portfolio/src/Controllers/Navbar.js":"5","/Users/zxanos/Development/personal/portfolio/src/Controllers/BlogController.js":"6","/Users/zxanos/Development/personal/portfolio/src/Controllers/SkillsController.js":"7","/Users/zxanos/Development/personal/portfolio/src/Controllers/ContactController.js":"8","/Users/zxanos/Development/personal/portfolio/src/Controllers/ProjectsController.js":"9","/Users/zxanos/Development/personal/portfolio/src/Controllers/AboutController.js":"10","/Users/zxanos/Development/personal/portfolio/src/Controllers/HomeController.js":"11","/Users/zxanos/Development/personal/portfolio/src/Controllers/FooterController.js":"12","/Users/zxanos/Development/personal/portfolio/src/Controllers/BlogEntryController.js":"13","/Users/zxanos/Development/personal/portfolio/src/Controllers/BlogCategoryContoller.js":"14","/Users/zxanos/Development/personal/portfolio/src/Controllers/ResumeController.js":"15"},{"size":1218,"mtime":1611466353167,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1606617161259,"results":"18","hashOfConfig":"17"},{"size":436,"mtime":1609476495287,"results":"19","hashOfConfig":"17"},{"size":500,"mtime":1610419761996,"results":"20","hashOfConfig":"17"},{"size":2643,"mtime":1611462764376,"results":"21","hashOfConfig":"17"},{"size":2803,"mtime":1612406377475,"results":"22","hashOfConfig":"17"},{"size":265,"mtime":1611445757741,"results":"23","hashOfConfig":"17"},{"size":6226,"mtime":1612554164323,"results":"24","hashOfConfig":"17"},{"size":392,"mtime":1612407236973,"results":"25","hashOfConfig":"17"},{"size":252,"mtime":1609467664304,"results":"26","hashOfConfig":"17"},{"size":236,"mtime":1611445736091,"results":"27","hashOfConfig":"17"},{"size":1176,"mtime":1612561913883,"results":"28","hashOfConfig":"17"},{"size":1049,"mtime":1612408106844,"results":"29","hashOfConfig":"17"},{"size":176,"mtime":1611442861676,"results":"30","hashOfConfig":"17"},{"size":260,"mtime":1610405232036,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"x2z6fh",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},"/Users/zxanos/Development/personal/portfolio/src/App.js",["71"],"import React from 'react';\nimport './App.scss';\nimport Navbar from './Controllers/Navbar';\nimport GridController from './Controllers/GridController';\nimport HomeController from './Controllers/HomeController';\nimport AboutController from './Controllers/AboutController';\nimport SkillsController from './Controllers/SkillsController';\nimport BlogController from './Controllers/BlogController';\nimport ProjectsController from './Controllers/ProjectsController';\nimport ContactController from './Controllers/ContactController';\nimport FooterController from './Controllers/FooterController';\n\n// import mainimg from './logo1.jpg'\n\n\nclass App extends React.Component {\n  render(){\n    return (\n        <div className=\"full-div\">\n          <Navbar />\n          <section id=\"home\">\n            <div className=\"wrapper\">\n              <div className=\"home-content\">\n                <HomeController />\n                <AboutController />\n                <SkillsController />\n                <ProjectsController />\n                <BlogController />\n                <ContactController />\n              </div>\n            </div>\n          </section>\n          <FooterController />\n        </div>\n    );\n  }\n}\n\nexport default App;\n",["72","73"],"/Users/zxanos/Development/personal/portfolio/src/reportWebVitals.js",[],["74","75"],"/Users/zxanos/Development/personal/portfolio/src/Controllers/GridController.js",[],["76","77"],"/Users/zxanos/Development/personal/portfolio/src/index.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/Navbar.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/BlogController.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/SkillsController.js",[],["78","79"],"/Users/zxanos/Development/personal/portfolio/src/Controllers/ContactController.js",["80"],"import React, { Component } from 'react';\nimport '../scss/Contact.scss';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\n// Email validation\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\n// Form validation\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // Validate form errors being empty\n  Object.values(formErrors).forEach((val) => {\n    val.length > 0 && (valid = false);\n  });\n\n  // Validate the form was filled out\n  Object.values(rest).forEach((val) => {\n    val === '' && (valid = false);\n  });\n\n  return valid;\n};\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      linkedin: '',\n      message: '',\n      formErrors: {\n        name: '',\n        email: '',\n        linkedin: '',\n        message: '',\n      },\n    };\n  }\n\n  toastifySuccess() {\n    toast.success('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n    });\n  }\n\n  toastifyFail() {\n    toast.error('Form failed to send!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback fail',\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (formValid(this.state)) {\n      // Handle form validation success\n      const { name, email, linkedin, message } = this.state;\n\n      // Set template params\n      let templateParams = {\n        name: name,\n        email: email,\n        linkedin: linkedin,\n        message: message,\n      };\n\n      emailjs.send('service_lcifpz7', 'template_j778nse', templateParams, 'user_nx9OxTUTWaKUrTuYLyr1y');\n\n      console.log(`\n        --SUBMITTING--\n        Name: ${name}\n        Email: ${email}\n        LinkedIn: ${linkedin}\n        Message: ${message}\n      `);\n      \n      this.toastifySuccess();\n      this.resetForm();\n    } else {\n      // Handle form validation failure\n      console.error('FORM INVALID - DISPLAY ERROR MESSAGE');\n      this.toastifyFail();\n    }\n  };\n\n  // Function to reset form\n  resetForm() {\n    this.setState({\n      name: '',\n      email: '',\n      linkedin: '',\n      message: '',\n    });\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    // switch (name) {\n    //   case 'name':\n    //     formErrors.name = value.length < 1 ? 'Please enter your name.' : '';\n    //     break;\n    //   case 'email':\n    //     formErrors.email = emailRegex.test(value) ? '' : 'Please enter a valid email address.';\n    //     break;\n    //   case 'message':\n    //     formErrors.message = value.length < 1 ? 'Please enter a message' : '';\n    //     break;\n    //   default:\n    //     break;\n    // }\n    this.setState({ formErrors, [name]: value });\n  };\n\n  render() {\n    const { formErrors } = this.state;\n\n    return (\n      <div id=\"contact\">\n        <div className=\"contactwrapper\">\n        <h1>Contact</h1>\n        <form id='contact-form' onSubmit={this.handleSubmit} noValidate>\n          <div className='row'>\n            <div className='namefield'>\n            \n              <input\n                type='text'\n                name='name'\n                value={this.state.name}\n                className={`form-control formInput ${formErrors.name.length > 0 ? 'error' : null}`}\n                onChange={this.handleChange}\n                // placeholder='Name'\n                required\n                id=\"fielddesign\"\n              ></input>\n              <label>Name:</label>\n              {formErrors.name.length > 0 && (\n                <span className='errorMessage'>{formErrors.name}</span>\n              )}\n            </div>\n            <div className='emailfield'>\n              <input\n                type='email'\n                name='email'\n                value={this.state.email}\n                className={`form-control formInput ${formErrors.email.length > 0 ? 'error' : null}`}\n                onChange={this.handleChange}\n                required\n                id=\"fielddesign\"\n              ></input>\n              <label>Email:</label>\n              {formErrors.email.length > 0 && (\n                <span className='errorMessage'>{formErrors.email}</span>\n              )}\n            </div>\n            <div className=\"linkedinfield\">\n              <input\n                  type='text'\n                  name='linkedin'\n                  value={this.state.linkedin}\n                  className={`form-control formInput ${formErrors.linkedin.length > 0 ? 'error' : null}`}\n                  onChange={this.handleChange}\n                  // placeholder='LinkedIn URL'\n                  required\n                  id=\"fielddesign\"\n                ></input>\n                <label>LinkedIn URL:</label>\n                {/* {formErrors.linkedin.length > 0 && (\n                  <span className='errorMessage'>{formErrors.linkedin}</span>\n                )} */}\n              </div>\n            </div>\n          <div className='row'>\n            <div className='msgfield'>\n              <textarea\n                rows='5'\n                name='message'\n                value={this.state.message}\n                className={`form-control formInput ${\n                  formErrors.message.length > 0 ? 'error' : null\n                }`}\n                onChange={this.handleChange}\n                placeholder=' Message'\n                noValidate\n                id=\"fielddesign\"\n              ></textarea>\n              {formErrors.message.length > 0 && (\n                <span className='errorMessage'>{formErrors.message}</span>\n              )}\n            </div>\n          </div>\n          <button className='submit-btn' type='submit'>\n            SEND\n          </button>\n        </form>\n\n        <ToastContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;","/Users/zxanos/Development/personal/portfolio/src/Controllers/ProjectsController.js",[],["81","82"],"/Users/zxanos/Development/personal/portfolio/src/Controllers/AboutController.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/HomeController.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/FooterController.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/BlogEntryController.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/BlogCategoryContoller.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/ResumeController.js",["83"],"import React from 'react';\nimport Pdf from '../docs/Resume.pdf'\n\nclass Resume extends React.Component{\n  onResumeClick() {\n    window.open(Pdf);\n  }\n\n  render() {\n    return (\n      <a onClick={this.onResumeClick}>Resume</a>\n    )\n  }\n}\n\nexport default Resume;",["84","85"],{"ruleId":"86","severity":1,"message":"87","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":22},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"90","replacedBy":"94"},{"ruleId":"92","replacedBy":"95"},{"ruleId":"90","replacedBy":"96"},{"ruleId":"92","replacedBy":"97"},{"ruleId":"90","replacedBy":"98"},{"ruleId":"92","replacedBy":"99"},{"ruleId":"86","severity":1,"message":"100","line":8,"column":7,"nodeType":"88","messageId":"89","endLine":8,"endColumn":17},{"ruleId":"90","replacedBy":"101"},{"ruleId":"92","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":11,"column":7,"nodeType":"105","endLine":11,"endColumn":39},{"ruleId":"90","replacedBy":"106"},{"ruleId":"92","replacedBy":"107"},"no-unused-vars","'GridController' is defined but never used.","Identifier","unusedVar","no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],["108"],["109"],["108"],["109"],"'emailRegex' is assigned a value but never used.",["108"],["109"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["108"],["109"],"no-global-assign","no-unsafe-negation"]