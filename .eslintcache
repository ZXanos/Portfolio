[{"/Users/zxanos/Development/personal/portfolio/src/App.js":"1","/Users/zxanos/Development/personal/portfolio/src/reportWebVitals.js":"2","/Users/zxanos/Development/personal/portfolio/src/Controllers/GridController.js":"3","/Users/zxanos/Development/personal/portfolio/src/index.js":"4","/Users/zxanos/Development/personal/portfolio/src/Controllers/Navbar.js":"5","/Users/zxanos/Development/personal/portfolio/src/Controllers/BlogController.js":"6","/Users/zxanos/Development/personal/portfolio/src/Controllers/SkillsController.js":"7","/Users/zxanos/Development/personal/portfolio/src/Controllers/ContactController.js":"8","/Users/zxanos/Development/personal/portfolio/src/Controllers/ProjectsController.js":"9","/Users/zxanos/Development/personal/portfolio/src/Controllers/AboutController.js":"10","/Users/zxanos/Development/personal/portfolio/src/Controllers/HomeController.js":"11","/Users/zxanos/Development/personal/portfolio/src/Controllers/FooterController.js":"12","/Users/zxanos/Development/personal/portfolio/src/Controllers/BlogEntryController.js":"13","/Users/zxanos/Development/personal/portfolio/src/Controllers/BlogCategoryContoller.js":"14","/Users/zxanos/Development/personal/portfolio/src/Controllers/ResumeController.js":"15"},{"size":1278,"mtime":1610403269518,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1606617161259,"results":"18","hashOfConfig":"17"},{"size":436,"mtime":1609476495287,"results":"19","hashOfConfig":"17"},{"size":500,"mtime":1610419761996,"results":"20","hashOfConfig":"17"},{"size":2635,"mtime":1610405247952,"results":"21","hashOfConfig":"17"},{"size":2720,"mtime":1610460273073,"results":"22","hashOfConfig":"17"},{"size":252,"mtime":1610402812986,"results":"23","hashOfConfig":"17"},{"size":5170,"mtime":1610680251132,"results":"24","hashOfConfig":"17"},{"size":262,"mtime":1610403029193,"results":"25","hashOfConfig":"17"},{"size":252,"mtime":1609467664304,"results":"26","hashOfConfig":"17"},{"size":253,"mtime":1610403340127,"results":"27","hashOfConfig":"17"},{"size":270,"mtime":1610402853984,"results":"28","hashOfConfig":"17"},{"size":1027,"mtime":1610403459565,"results":"29","hashOfConfig":"17"},{"size":176,"mtime":1610246152694,"results":"30","hashOfConfig":"17"},{"size":260,"mtime":1610405232036,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"x2z6fh",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zxanos/Development/personal/portfolio/src/App.js",[],["66","67"],"/Users/zxanos/Development/personal/portfolio/src/reportWebVitals.js",[],["68","69"],"/Users/zxanos/Development/personal/portfolio/src/Controllers/GridController.js",[],"/Users/zxanos/Development/personal/portfolio/src/index.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/Navbar.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/BlogController.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/SkillsController.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/ContactController.js",["70"],"import React, { Component } from 'react';\nimport '../scss/Contact.scss';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\n// Email validation\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\n// Form validation\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // Validate form errors being empty\n  Object.values(formErrors).forEach((val) => {\n    val.length > 0 && (valid = false);\n  });\n\n  // Validate the form was filled out\n  Object.values(rest).forEach((val) => {\n    val === '' && (valid = false);\n  });\n\n  return valid;\n};\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      formErrors: {\n        name: '',\n        email: '',\n        message: '',\n      },\n    };\n  }\n\n  toastifySuccess() {\n    toast.success('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n    });\n  }\n\n  toastifyFail() {\n    toast.error('Form failed to send!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback fail',\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (formValid(this.state)) {\n      // Handle form validation success\n      const { name, email, subject, message } = this.state;\n\n      // Set template params\n      let templateParams = {\n        name: name,\n        email: email,\n        message: message,\n      };\n\n      emailjs.send('service_lcifpz7', 'template_j778nse', templateParams, 'user_nx9OxTUTWaKUrTuYLyr1y');\n\n      console.log(`\n        --SUBMITTING--\n        Name: ${name}\n        Email: ${email}\n        Message: ${message}\n      `);\n      \n      this.toastifySuccess();\n      this.resetForm();\n    } else {\n      // Handle form validation failure\n      console.error('FORM INVALID - DISPLAY ERROR MESSAGE');\n      this.toastifyFail();\n    }\n  };\n\n  // Function to reset form\n  resetForm() {\n    this.setState({\n      name: '',\n      email: '',\n      message: '',\n    });\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case 'name':\n        formErrors.name = value.length < 1 ? 'Please enter your name.' : '';\n        break;\n      case 'email':\n        formErrors.email = emailRegex.test(value) ? '' : 'Please enter a valid email address.';\n        break;\n      case 'message':\n        formErrors.message = value.length < 1 ? 'Please enter a message' : '';\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value });\n  };\n\n  render() {\n    const { formErrors } = this.state;\n\n    return (\n      <div className=\"grid\" id=\"contact\">\n        <form id='contact-form' onSubmit={this.handleSubmit} noValidate>\n          <div className='row'>\n            <div className='col-6'>\n              <input\n                type='text'\n                name='name'\n                value={this.state.name}\n                className={`form-control formInput ${formErrors.name.length > 0 ? 'error' : null}`}\n                onChange={this.handleChange}\n                placeholder='Name'\n                noValidate\n              ></input>\n              {formErrors.name.length > 0 && (\n                <span className='errorMessage'>{formErrors.name}</span>\n              )}\n            </div>\n\n            <div className='col-6'>\n              <input\n                type='email'\n                name='email'\n                value={this.state.email}\n                className={`form-control formInput ${formErrors.email.length > 0 ? 'error' : null}`}\n                onChange={this.handleChange}\n                placeholder='Email'\n                noValidate\n              ></input>\n              {formErrors.email.length > 0 && (\n                <span className='errorMessage'>{formErrors.email}</span>\n              )}\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-6'>\n              <textarea\n                rows='5'\n                name='message'\n                value={this.state.message}\n                className={`form-control formInput ${\n                  formErrors.message.length > 0 ? 'error' : null\n                }`}\n                onChange={this.handleChange}\n                placeholder='Leave a message here!'\n                noValidate\n              ></textarea>\n              {formErrors.message.length > 0 && (\n                <span className='errorMessage'>{formErrors.message}</span>\n              )}\n            </div>\n          </div>\n          <button className='submit-btn' type='submit'>\n            Submit\n          </button>\n        </form>\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;","/Users/zxanos/Development/personal/portfolio/src/Controllers/ProjectsController.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/AboutController.js",[],["71","72"],"/Users/zxanos/Development/personal/portfolio/src/Controllers/HomeController.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/FooterController.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/BlogEntryController.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/BlogCategoryContoller.js",[],"/Users/zxanos/Development/personal/portfolio/src/Controllers/ResumeController.js",["73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":71,"column":28,"nodeType":"82","messageId":"83","endLine":71,"endColumn":35},{"ruleId":"74","replacedBy":"84"},{"ruleId":"76","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":11,"column":7,"nodeType":"88","endLine":11,"endColumn":39},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],["89"],["90"],"no-unused-vars","'subject' is assigned a value but never used.","Identifier","unusedVar",["89"],["90"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]